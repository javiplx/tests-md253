service_mount_system(){

scsidevs=
while read scsi ; do
 set -- $scsi
 case $1 in
  Host\:) echo -n "$2=" ;;
  Vendor\:) echo "$2" ; scsidevs="${scsidevs}X" ;;
 esac
done < /proc/scsi/scsi > /etc/scsi.list

echo "scsidevs=${scsidevs}" >> /etc/scsi.list

/bin/mount -t jffs2 /dev/mtdblock4 /etc/sysconfig/config
[ $? -eq 0 ] || {
 echo "sys_led clear" > /proc/mp_leds
 echo "error_led set" > /proc/mp_leds
 exit
 }

ROOTFS=/dev/mtdblock3
[ -n "${scsidevs}" ] && \
 /bin/mount -r -t xfs /dev/sda1 /mnt && \
 [ -f /mnt/squashfs.img ] && \
   ROOTFS=/mnt/squashfs.img

/bin/dd if=${ROOTFS} of=/dev/ram1 > /dev/null 2>&1
/bin/umount /mnt

/bin/mount -t squashfs /dev/ram1 /usr
[ $? -eq 0 ] || {
 echo "sys_led clear" > /proc/mp_leds
 echo "error_led set" > /proc/mp_leds
 return
 }

/bin/test -f /etc/sysconfig/config/finish || {
 service_factory_reset
 }
/bin/cp -af /etc/version /etc/sysconfig/config
/bin/rm -f /etc/sysconfig/config/touch

for dev in a b; do
 /bin/smartctl -i /dev/sd${dev} -d ata -s on >/dev/null 2>&1
done

crontable=/etc/sysconfig/config/root
/bin/cat ${crontable}|/bin/grep "detectRebuild" >/dev/null 2>&1
[ $? -eq 0 ] || echo "#* * * * * /etc/sysconfig/system-script/detectRebuild" >> ${crontable}

}
